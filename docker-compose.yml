version: '3.8'

services:
  database:
    image: postgres:14-alpine
    container_name: ehd-db
    environment:
      POSTGRES_DB: ehd_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ehd-backend
    depends_on:
      database:
        condition: service_healthy
    environment:
      DB_URL: jdbc:postgresql://database:5432/ehd_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./ehd-frontend
      dockerfile: Dockerfile
    container_name: ehd-frontend
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api/v1
      - NODE_ENV=production
    ports:
      - "3000:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pg_data: 